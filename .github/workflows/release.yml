name: Release
on:
  release:
    types: [published]
  workflow_dispatch:

permissions: read-all

jobs:
  build:
    strategy:
      matrix:
        os: [macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    outputs:
      artifact-filename-darwin-arm64: ${{ steps.artifact.outputs.artifact-filename-darwin-arm64 }}
      artifact-filename-darwin-x86_64: ${{ steps.artifact.outputs.artifact-filename-darwin-x86_64 }}
      sha256-checksum-darwin-arm64: ${{ steps.checksum.outputs.sha256-checksum-darwin-arm64 }}
      sha256-checksum-darwin-x86_64: ${{ steps.checksum.outputs.sha256-checksum-darwin-x86_64 }}
      sha256-filename-darwin-arm64: ${{ steps.checksum.outputs.sha256-filename-darwin-arm64 }}
      sha256-filename-darwin-x86_64: ${{ steps.checksum.outputs.sha256-filename-darwin-x86_64 }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install runtime dependencies
        run: brew install popt
      - name: Install test dependencies
        run: brew install cmocka
      - name: Install build tools
        run: brew install just pandoc
      - id: arch
        name: Get machine hardware name
        run: |
          set -euo pipefail
          arch=$(uname -m)
          if [[ "${arch}" != "x86_64" && "${arch}" != "arm64" ]]; then
              echo "Unexpected machine hardware name: ${arch}"
              exit 1
          fi
          echo "name=${arch}" >> "${GITHUB_OUTPUT}"
      - id: artifact
        name: Generate build artifact
        env:
          ARCHITECTURE: ${{ steps.arch.outputs.name }}
        shell: 'script -q /dev/null bash -e {0}' #Â Ensure stdin is attached to tty for unit tests
        run: |
          set -euo pipefail
          just package "${GITHUB_REF_NAME}"
          artifact="flog-${GITHUB_REF_NAME}-darwin-${ARCHITECTURE}.tar.xz"
          if [[ ! -f "${artifact}" ]]; then
              echo "Failed to generated expected build artifact: ${artifact}"
          fi
          echo "name=${artifact}" >> "${GITHUB_OUTPUT}"
          echo "artifact-filename-darwin-${{ steps.arch.outputs.name }}=${artifact}" >> "${GITHUB_OUTPUT}"
      - id: checksum
        name: Generate build artifact SHA-256 checksum file
        env:
          ARCHITECTURE: ${{ steps.arch.outputs.name }}
          ARTIFACT_NAME: ${{ steps.artifact.outputs.name }}
        run: |
          set -euo pipefail
          shasum -a 256 "${ARTIFACT_NAME}" > "${ARTIFACT_NAME}.sha256"
          echo "sha256-checksum-darwin-${ARCHITECTURE}=$(cat "${ARTIFACT_NAME}.sha256" | base64)" >> "${GITHUB_OUTPUT}"
          echo "sha256-filename-darwin-${ARCHITECTURE}=${ARTIFACT_NAME}.sha256" >> "${GITHUB_OUTPUT}"
      - name: Upload build artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ steps.artifact.outputs.name }}
          path: ${{ steps.artifact.outputs.name }}
          if-no-files-found: error
          retention-days: 7
      - name: Upload SHA-256 checksum file
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ steps.artifact.outputs.name }}.sha256
          path: ${{ steps.artifact.outputs.name }}.sha256
          if-no-files-found: error
          retention-days: 7
  combine-checksums:
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      checksums: ${{ steps.checksums.outputs.combined }}
    env:
      CHECKSUMS: ${{ toJSON(needs.build.outputs) }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
      - id: checksums
        name: Combine SHA-256 checksums
        run: |
          set -euo pipefail
          echo "${CHECKSUMS}" | jq -r 'with_entries(select(.key | match("sha256-checksum-.*-.*")))[] | @base64d' | sed "/^$/d" > checksums.txt
          echo "combined=$(cat checksums.txt | base64 -w0)" >> "${GITHUB_OUTPUT}"
  provenance:
    needs: [build, combine-checksums]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0 # Must specify version tag; see https://github.com/slsa-framework/slsa-verifier/issues/12
    with:
      base64-subjects: ${{ needs.combine-checksums.outputs.checksums }}
      provenance-name: flog-${{ github.ref_name }}.intoto.jsonl
      upload-assets: ${{ startsWith(github.ref, 'refs/tags/v') }}
  release:
    needs: [build, combine-checksums, provenance]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
      - name: Download x86_64 build artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ needs.build.outputs.artifact-filename-darwin-x86_64 }}
      - name: Download x86_64 SHA-256 checksum file
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ needs.build.outputs.sha256-filename-darwin-x86_64 }}
      - name: Download arm64 build artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ needs.build.outputs.artifact-filename-darwin-arm64 }}
      - name: Download arm64 SHA-256 checksum file
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ needs.build.outputs.sha256-filename-darwin-arm64 }}
      - name: Upload release artifacts
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          files: |
            ${{ needs.build.outputs.artifact-filename-darwin-x86_64 }}
            ${{ needs.build.outputs.sha256-filename-darwin-x86_64 }}
            ${{ needs.build.outputs.artifact-filename-darwin-arm64 }}
            ${{ needs.build.outputs.sha256-filename-darwin-arm64 }}
